{"version":3,"sources":["state/reducers/auth.js","state/actions.js","state/reducers/ui.js","state/reducers/index.js","state/reducers/posts.js","state/store.js","serviceWorker.js","components/Pages/Error404.jsx","components/Atoms/Loader/Loader.jsx","components/Atoms/Button/Button.jsx","components/Atoms/Input/Input.jsx","components/Atoms/Input/SubmitForm.jsx","components/Atoms/Textarea/Textarea.jsx","api/api.js","api/auth.js","state/actionCreators.js","components/Organisms/NewPost/NewPost.jsx","components/Organisms/Modal/Modal.jsx","components/Organisms/Post/Post.jsx","components/Molecules/FormSearch/FormSearch.jsx","components/Templates/Posts/Posts.jsx","components/Pages/Blog.jsx","components/Pages/Home.jsx","components/Pages/PostDetail.jsx","components/Utils/Routes.jsx","components/Molecules/Header/Header.jsx","App.jsx","index.js","assets/right-arrow.svg"],"names":["initialState","loading","loggedIn","token","message","user","auth","state","arguments","length","undefined","action","type","Object","objectSpread","payload","data","initialStateInteraction","showModal","ui","reducers","combineReducers","posts","error","post","toast","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","Boolean","window","location","hostname","match","Error404","react_default","a","createElement","className","Loader","Button","props","theme","onClick","text","InputForm","react","onChange","value","id","minLength","name","placeholder","required","defaultValue","default","autoComplete","disabled","ref","SubmitForm","Textarea","label","cols","rows","API","url","axios","get","concat","method","headers","Content-Type","authorization","ENDPOINT","AUTH","code","getData","username","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","_ref2","wrap","_context","prev","next","abrupt","trim","sent","t0","stop","this","_x","apply","NewPost","handleOnSubmit","e","preventDefault","_this$props","_this","handleOnCreatePost","handleOnUpdatePost","_this$props$auth","update","postToUpdate","form","target","description","public","files","post.md","content","entityTitle","structure","updateEntityTitle","entityFields","_this$props2","onSubmit","map","field","kind","Input_Input","Atoms_Textarea_Textarea","Atoms_Loader_Loader","lib","position","autoClose","hideProgressBar","pauseOnVisibilityChange","Input_SubmitForm","Component","connect","_ref6","_callee4","_context4","_x4","createPost","_ref7","_callee5","_context5","_x5","updatePost","Modal","show","closeModal","children","handleOnShowModal","large","Date","updated_at","toDateString","slice","react_timeago_lib_default","date","Link","to","owner","login","Atoms_Button_Button","values","i","react_markdown_default","source","Organisms_Modal_Modal","Organisms_NewPost_NewPost","handleOnSearch","_ref$posts","Molecules_FormSearch_FormSearch","src","avatar_url","alt","rel","href","html_url","Organisms_Post_Post","Templates_Posts_Posts","Home","getToken","search","replace","_ref5","_callee3","response","_context3","requestToken","requestUser","_x3","PostDetail","index","getPost","params","setState","findIndex","s","console","log","nextProps","_this$state","arrow","_ref3","PrivateRoute","component","authed","rest","Route","assign","render","Redirect","pathname","from","PublicRoute","Routes","Switch","Routes_PublicRoute","path","exact","Routes_PrivateRoute","Blog","handleOnRedirect","_callee2","_ref4","request","URL","_context2","requestAuth","responseURL","_x2","handleOnLogout","_ref$auth","BrowserRouter","Molecules_Header_Header","Utils_Routes","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","configureStore","ReactDOM","es","integration_react","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9cbd4f7e.chunk.js","sourcesContent":["import { TOKEN_REQUEST, TOKEN_SUCCESS, TOKEN_FAIL, LOGOUT } from '../actions'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  loggedIn: false,\r\n  token: null,\r\n  message: null,\r\n  user: null\r\n}\r\n\r\nconst auth = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOKEN_REQUEST:\r\n      return { ...state, loading: true }\r\n    case TOKEN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        loading: false,\r\n        token: action.payload.token,\r\n        user: action.payload.user.data\r\n      }\r\n    case TOKEN_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: 'Error'\r\n      }\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        token: null,\r\n        user: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default auth\r\n","export const GET_DATA_REQUEST = 'posts/REQUEST'\r\nexport const GET_DATA_SUCCESS = 'posts/REQUEST_SUCCESS'\r\nexport const GET_DATA_FAIL = 'posts/REQUEST_FAIL'\r\n\r\nexport const REDIRECT_REQUEST = 'redirect/REQUEST'\r\nexport const REDIRECT_SUCCESS = 'redirect/REQUEST_SUCCESS'\r\nexport const REDIRECT_FAIL = 'redirect/REQUEST_FAIL'\r\n\r\nexport const CREATE_POST_REQUEST = 'post/REQUEST'\r\nexport const CREATE_POST_SUCCESS = 'post/REQUEST_SUCCESS'\r\nexport const CREATE_POST_FAIL = 'post/REQUEST_FAIL'\r\n\r\nexport const UPDATE_POST_REQUEST = 'post-update/REQUEST'\r\nexport const UPDATE_POST_SUCCESS = 'post-update/REQUEST_SUCCESS'\r\nexport const UPDATE_POST_FAIL = 'post-update/REQUEST_FAIL'\r\n\r\nexport const SEARCH_USER_GISTS_REQUEST = 'search/REQUEST'\r\nexport const SEARCH_USER_GISTS_SUCCESS = 'search/REQUEST_SUCCESS'\r\nexport const SEARCH_USER_GISTS_FAIL = 'search/REQUEST_FAIL'\r\n\r\nexport const TOKEN_REQUEST = 'token/REQUEST'\r\nexport const TOKEN_SUCCESS = 'token/REQUEST_SUCCESS'\r\nexport const TOKEN_FAIL = 'token/REQUEST_FAIL'\r\nexport const LOGOUT = 'token/LOGOUT'\r\n\r\nexport const SHOW_MODAL = 'modal/SHOW'\r\n","import { SHOW_MODAL } from '../actions'\r\n\r\nconst initialStateInteraction = {\r\n  showModal: false\r\n}\r\n\r\nconst ui = (state = initialStateInteraction, action) => {\r\n  switch (action.type) {\r\n    case SHOW_MODAL:\r\n      return { ...state, showModal: !state.showModal }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default ui\r\n","import { combineReducers } from 'redux'\r\nimport { posts, post } from './posts'\r\nimport auth from './auth'\r\nimport ui from './ui'\r\n\r\nconst reducers = combineReducers({\r\n  posts,\r\n  post,\r\n  auth,\r\n  ui\r\n})\r\n\r\nexport default reducers\r\n","import {\r\n  GET_DATA_SUCCESS,\r\n  GET_DATA_FAIL,\r\n  GET_DATA_REQUEST,\r\n  CREATE_POST_REQUEST,\r\n  CREATE_POST_SUCCESS,\r\n  CREATE_POST_FAIL,\r\n  UPDATE_POST_REQUEST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_FAIL\r\n} from '../actions'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const post = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_POST_REQUEST:\r\n      return { ...state, loading: true }\r\n    case UPDATE_POST_REQUEST:\r\n      return { ...state, loading: true }\r\n    case CREATE_POST_SUCCESS:\r\n      toast('the publication was created correctly')\r\n      return { ...state, loading: false }\r\n    case UPDATE_POST_SUCCESS:\r\n      toast('the publication was updated correctly')\r\n      return { ...state, loading: false }\r\n    case CREATE_POST_FAIL:\r\n      toast.error(action.error)\r\n      return { ...state, loading: false, error: action.error }\r\n    case UPDATE_POST_FAIL:\r\n      toast.error(action.error)\r\n      return { ...state, loading: false, error: action.error }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const posts = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_DATA_REQUEST:\r\n      return { ...state, loading: true, error: null }\r\n    case GET_DATA_SUCCESS:\r\n      return { ...state, loading: false, posts: action.data }\r\n    case GET_DATA_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n        posts: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport reducers from './reducers/'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['post']\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\n\r\nexport default () => {\r\n  let store = createStore(\r\n    persistedReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n  )\r\n\r\n  let persistor = persistStore(store)\r\n\r\n  return { store, persistor }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\n/**\r\n * This component will be responsible for displaying the view with error message by route not found.\r\n */\r\n\r\nconst Error404 = () => (\r\n  <div className='l-container container'>\r\n    Error 404\r\n  </div>\r\n)\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport './Loader.scss'\r\n\r\n/**\r\n * This is a react component that represents a spinner to show while loading external resources.\r\n */\r\n\r\nconst Loader = () => (\r\n  <div className='spinner'>\r\n    <div className='dot1' />\r\n    <div className='dot2' />\r\n  </div>\r\n)\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Button.scss'\r\n\r\n/**\r\n * This is an react component that that represents a button.\r\n */\r\n\r\nconst Button = props => (\r\n  <button\r\n    className={'button ' + props.theme}\r\n    onClick={props.onClick}\r\n    type='button'\r\n  >\r\n    {props.text}\r\n  </button>\r\n)\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n  theme: PropTypes.string\r\n}\r\n\r\nexport default Button\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Input.scss'\r\n\r\n/**\r\n * This is an react component that that represents a personalized input for the forms, etc.\r\n */\r\n\r\nconst InputForm = props => (\r\n  <Fragment>\r\n    <input\r\n      onChange={props.onChange}\r\n      value={props.value}\r\n      id={props.id}\r\n      className={'input ' + props.theme}\r\n      type={props.type}\r\n      minLength={props.minLength}\r\n      name={props.name}\r\n      placeholder={props.placeholder}\r\n      required={props.required}\r\n      defaultValue={props.default}\r\n      autoComplete={props.autoComplete}\r\n      disabled={props.disabled}\r\n      ref={props.ref}\r\n    />\r\n  </Fragment>\r\n)\r\n\r\nInputForm.propTypes = {\r\n  classes: PropTypes.string,\r\n  label: PropTypes.string,\r\n  minLength: PropTypes.number,\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  defaultValue: PropTypes.string,\r\n  autoComplete: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  theme: PropTypes.string\r\n}\r\n\r\nexport default InputForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * This is an react component that that represents an input of type submit for the forms.\r\n */\r\n\r\nconst SubmitForm = props => (\r\n  <div>\r\n    <input\r\n      type='submit'\r\n      className={'button ' + props.theme}\r\n      value={props.text}\r\n      disabled={props.disabled}\r\n    />\r\n  </div>\r\n)\r\n\r\nSubmitForm.propTypes = {\r\n  theme: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool\r\n}\r\n\r\nexport default SubmitForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Textarea.scss'\r\n\r\n/**\r\n * This is a react component that represents a text field for writing long paragraphs.\r\n */\r\n\r\nconst Textarea = props => (\r\n  <div>\r\n    <label className=''>{props.label}</label>\r\n    <textarea\r\n      cols='30'\r\n      rows='15'\r\n      value={props.value}\r\n      id={props.id}\r\n      className={'input ' + props.theme}\r\n      type={props.type}\r\n      minLength={props.minLength}\r\n      name={props.name}\r\n      placeholder={props.placeholder}\r\n      required={props.required}\r\n      defaultValue={props.default}\r\n      disabled={props.disabled}\r\n      ref={props.ref}\r\n    />\r\n  </div>\r\n)\r\n\r\nTextarea.propTypes = {\r\n  classes: PropTypes.string,\r\n  label: PropTypes.string,\r\n  minLength: PropTypes.number,\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  defaultValue: PropTypes.string,\r\n  autoComplete: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  theme: PropTypes.string\r\n}\r\n\r\nexport default Textarea\r\n","import axios from 'axios'\r\n\r\nconst ENDPOINT = 'https://api.github.com'\r\n\r\nexport default class API {\r\n  static get (url) {\r\n    return axios.get(`${ENDPOINT}/${url}`)\r\n  }\r\n\r\n  static post (post, token) {\r\n    return axios({\r\n      method: 'POST',\r\n      url: 'https://api.github.com/gists',\r\n      data: post,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static update (id, post, token) {\r\n    return axios({\r\n      method: 'PATCH',\r\n      url: `https://api.github.com/gists/${id}`,\r\n      data: post,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `token ${token}`\r\n      }\r\n    })\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nconst CLIENT_ID = 'a9b9a9cdd993b995f360'\r\nconst CLIENT_SECRET = '4c689dd1d7bc53aa6482bfb09b2edf6d0436cd29'\r\nconst REDIRECT_URI = 'https://andres9722.github.io/blog/'\r\nconst ENDPOINT = `https://github.com/login/oauth/authorize?client_id=${CLIENT_ID}&scope=user,gist&redirect_uri=${REDIRECT_URI}`\r\nconst TOKEN = 'https://github.com/login/oauth/access_token'\r\nconst USER = 'https://api.github.com/user?access_token='\r\n\r\nexport default class AUTH {\r\n  static requestAuth () {\r\n    return axios.get(`${ENDPOINT}`)\r\n  }\r\n\r\n  static requestUser (token) {\r\n    return axios.get(`${USER}${token}`)\r\n  }\r\n\r\n  static requestToken (code) {\r\n    return axios.post(\r\n      `${TOKEN}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&code=${code}`\r\n    )\r\n  }\r\n}\r\n","import {\r\n  GET_DATA_SUCCESS,\r\n  GET_DATA_FAIL,\r\n  REDIRECT_REQUEST,\r\n  REDIRECT_SUCCESS,\r\n  REDIRECT_FAIL,\r\n  TOKEN_REQUEST,\r\n  TOKEN_SUCCESS,\r\n  TOKEN_FAIL,\r\n  LOGOUT,\r\n  GET_DATA_REQUEST,\r\n  CREATE_POST_REQUEST,\r\n  CREATE_POST_SUCCESS,\r\n  CREATE_POST_FAIL,\r\n  SHOW_MODAL,\r\n  UPDATE_POST_REQUEST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_FAIL\r\n} from './actions'\r\nimport API from '../api/api'\r\nimport AUTH from '../api/auth'\r\n\r\nexport const showModal = () => ({ type: SHOW_MODAL })\r\n\r\nexport const onLogout = () => ({ type: LOGOUT })\r\n\r\nexport const getData = username => {\r\n  return async dispatch => {\r\n    dispatch({ type: GET_DATA_REQUEST })\r\n\r\n    if (username === '') {\r\n      return dispatch({\r\n        type: GET_DATA_SUCCESS,\r\n        data: null\r\n      })\r\n    }\r\n\r\n    try {\r\n      let { data } = await API.get(`users/${username.trim()}/gists`)\r\n\r\n      return dispatch({\r\n        type: GET_DATA_SUCCESS,\r\n        data\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: GET_DATA_FAIL, error: error.message })\r\n    }\r\n  }\r\n}\r\n\r\nexport const onRedirectAuth = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: REDIRECT_REQUEST })\r\n\r\n    try {\r\n      let { request } = await AUTH.requestAuth()\r\n\r\n      let URL = request.responseURL\r\n\r\n      window.location = URL\r\n\r\n      return dispatch({\r\n        type: REDIRECT_SUCCESS\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: REDIRECT_FAIL })\r\n    }\r\n  }\r\n}\r\n\r\nexport const getToken = code => {\r\n  return async dispatch => {\r\n    dispatch({ type: TOKEN_REQUEST })\r\n\r\n    try {\r\n      let response = await AUTH.requestToken(code)\r\n\r\n      let token = await response.data\r\n        .replace('access_token=', '')\r\n        .replace('&scope=gist%2Cuser&token_type=bearer', '')\r\n\r\n      let user = await AUTH.requestUser(token)\r\n\r\n      let payload = {\r\n        token,\r\n        user\r\n      }\r\n\r\n      return dispatch({\r\n        type: TOKEN_SUCCESS,\r\n        payload\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: TOKEN_FAIL })\r\n    }\r\n  }\r\n}\r\n\r\nexport const createPost = (post, token) => {\r\n  return async dispatch => {\r\n    dispatch({ type: CREATE_POST_REQUEST })\r\n\r\n    try {\r\n      await API.post(post, token)\r\n\r\n      return dispatch({\r\n        type: CREATE_POST_SUCCESS\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: CREATE_POST_FAIL, error: error.message })\r\n    }\r\n  }\r\n}\r\n\r\nexport const updatePost = (id, post, token) => {\r\n  return async dispatch => {\r\n    dispatch({ type: UPDATE_POST_REQUEST })\r\n\r\n    try {\r\n      await API.update(id, post, token)\r\n\r\n      return dispatch({\r\n        type: UPDATE_POST_SUCCESS\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_POST_FAIL, error: error.message })\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport InputForm from '../../Atoms/Input/Input'\r\nimport Loader from '../../Atoms/Loader/Loader'\r\nimport SubmitForm from '../../Atoms/Input/SubmitForm'\r\nimport Textarea from '../../Atoms/Textarea/Textarea'\r\nimport structure from '../../../data/createPost.json'\r\nimport { createPost, updatePost } from '../../../state/actionCreators'\r\nimport './NewPost.scss'\r\n\r\n/**\r\n * This component is responsible for creating and updating the posts.\r\n */\r\n\r\nclass NewPost extends Component {\r\n  handleOnSubmit = e => {\r\n    e.preventDefault()\r\n    const {\r\n      handleOnCreatePost,\r\n      handleOnUpdatePost,\r\n      auth: { token, user },\r\n      update,\r\n      postToUpdate\r\n    } = this.props\r\n    const form = e.target\r\n    const description = form.description.value\r\n    const content = form.content.value\r\n\r\n    const post = {\r\n      description,\r\n      public: true,\r\n      files: {\r\n        'post.md': {\r\n          content\r\n        }\r\n      }\r\n    }\r\n\r\n    if (update) {\r\n      handleOnUpdatePost(postToUpdate.id, post, token)\r\n    } else {\r\n      handleOnCreatePost(post, token, user)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { entityTitle, updateEntityTitle, entityFields } = structure\r\n    const { post: { loading }, update, postToUpdate } = this.props\r\n\r\n    return (\r\n      <section className='form-container'>\r\n        <h1 className='headline'>\r\n          {!update ? entityTitle : updateEntityTitle}\r\n        </h1>\r\n        <form className='form' onSubmit={this.handleOnSubmit}>\r\n          {entityFields.map(field => {\r\n            if (field.kind === 'input') {\r\n              return (\r\n                <InputForm\r\n                  type={field.type}\r\n                  name={field.name}\r\n                  id={field.id}\r\n                  placeholder={field.placeholder}\r\n                  key={field.id}\r\n                  required\r\n                  default={postToUpdate && postToUpdate[field.name]}\r\n                />\r\n              )\r\n            }\r\n            if (field.kind === 'textarea') {\r\n              return (\r\n                <Textarea\r\n                  name={field.name}\r\n                  id={field.id}\r\n                  placeholder={field.placeholder}\r\n                  key={field.id}\r\n                  required\r\n                  default={\r\n                    postToUpdate &&\r\n                      postToUpdate.files &&\r\n                      postToUpdate.files['post.md'] &&\r\n                      postToUpdate.files['post.md'].content\r\n                  }\r\n                />\r\n              )\r\n            }\r\n\r\n            return null\r\n          })}\r\n          {loading && <Loader />}\r\n          <ToastContainer\r\n            position='bottom-right'\r\n            autoClose={2500}\r\n            hideProgressBar={false}\r\n            pauseOnVisibilityChange\r\n          />\r\n          <SubmitForm theme='button--secondary' text='Publish' />\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nNewPost.propTypes = {\r\n  handleOnCreatePost: PropTypes.func,\r\n  handleOnUpdatePost: PropTypes.func,\r\n  auth: PropTypes.object.isRequired,\r\n  update: PropTypes.bool,\r\n  postToUpdate: PropTypes.object\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleOnCreatePost (post, token, user) {\r\n    dispatch(createPost(post, token, user))\r\n  },\r\n  handleOnUpdatePost (id, post, token) {\r\n    dispatch(updatePost(id, post, token))\r\n  }\r\n})\r\n\r\nconst mapStateToProps = ({ auth, post }) => ({ auth, post })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Modal.scss'\r\n\r\n/**\r\n * This component will be useful to open windows and display a message or certain information to the user that stands out with respect to the content of the application.\r\n */\r\n\r\nconst Modal = ({ show, closeModal, children }) => {\r\n  return (\r\n    <div id='modal' className={show ? 'modal--show modal' : 'modal'}>\r\n      <div className='modal__content'>\r\n        <span className='modal__close' onClick={closeModal}>\r\n          <span className='icon-close icon' />\r\n          x\r\n        </span>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  closeModal: PropTypes.func.isRequired,\r\n  children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default Modal\r\n","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport TimeAgo from 'react-timeago'\r\nimport { Link } from 'react-router-dom'\r\nimport Markdown from 'react-markdown'\r\nimport Button from '../../Atoms/Button/Button'\r\nimport NewPost from '../NewPost/NewPost'\r\nimport Modal from '../../Organisms/Modal/Modal'\r\nimport './Post.scss'\r\nimport { showModal } from '../../../state/actionCreators'\r\n\r\n/**\r\n * This component is responsible for creating and updating the posts.\r\n */\r\n\r\nconst Post = ({ post, large, auth, ui: { showModal }, handleOnShowModal }) => {\r\n  return (\r\n    <Fragment>\r\n      {post &&\r\n        <li\r\n          id='posts-item'\r\n          className={large ? 'posts-item posts-item--large' : 'posts-item'}\r\n        >\r\n          <h6>\r\n            {new Date(post.updated_at).toDateString().slice(4)}\r\n            {' '}\r\n            -\r\n            {' '}\r\n            {<TimeAgo date={post.updated_at} />}\r\n          </h6>\r\n          <div className='posts-item__content'>\r\n            {<p className='posts-item__description'>{post.description}</p>}\r\n            {!large &&\r\n              <div className='posts-item__post'>\r\n                <Link className='posts-item__link' to={`/post/${post.id}`}>\r\n                  Read\r\n                </Link>\r\n              </div>}\r\n          </div>\r\n          {auth.user &&\r\n            post.owner.login === auth.user.login &&\r\n            large &&\r\n            <Button\r\n              onClick={handleOnShowModal}\r\n              theme='button--secondary posts-item--edit'\r\n              text='Edit'\r\n            />}\r\n          {large &&\r\n            <div>\r\n              {Object.values(post.files).map((text, i) => (\r\n                <div key={i} className='posts-item__text'>\r\n                  <Markdown source={text.content} />\r\n                </div>\r\n              ))}\r\n            </div>}\r\n          <Modal show={showModal} closeModal={handleOnShowModal}>\r\n            <NewPost update postToUpdate={post} />\r\n          </Modal>\r\n        </li>}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nPost.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  large: PropTypes.bool,\r\n  auth: PropTypes.object.isRequired,\r\n  ui: PropTypes.object,\r\n  handleOnShowModal: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({ auth, ui }) => ({ auth, ui })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleOnShowModal () {\r\n    dispatch(showModal())\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport InputForm from '../../Atoms/Input/Input'\r\nimport { getData } from '../../../state/actionCreators'\r\nimport './FormSearch.scss'\r\n\r\n/**\r\n * This component is responsible for dispatching the value of an input with the name of a user to be searched in the github API.\r\n */\r\n\r\nconst FormSearch = ({ handleOnSearch }) => {\r\n  return (\r\n    <section className='form-container'>\r\n      <form\r\n        className='form-search'\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          handleOnSearch(e.target.username.value)\r\n        }}\r\n      >\r\n        <h1 className='headline'>SEARCH</h1>\r\n        <InputForm\r\n          onChange={e => {\r\n            if (e.target.value === '') {\r\n              handleOnSearch('')\r\n            }\r\n          }}\r\n          name='username'\r\n          placeholder='Username...'\r\n        />\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nFormSearch.propTypes = {\r\n  handleOnSearch: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleOnSearch (username) {\r\n    dispatch(getData(username))\r\n  }\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(FormSearch)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Loader from '../../Atoms/Loader/Loader'\r\nimport Post from '../../Organisms/Post/Post'\r\nimport './Posts.scss'\r\nimport FormSearch from '../../Molecules/FormSearch/FormSearch'\r\n\r\n/**\r\n * This component is responsible for displaying the list of summarized publications of a particular user.\r\n */\r\n\r\nexport const Posts = ({ posts: { posts, loading, error } }) => {\r\n  return (\r\n    <div>\r\n      <FormSearch posts={!!posts} />\r\n      {posts &&\r\n        posts[0] &&\r\n        <div className='user-info'>\r\n          <img\r\n            className='posts-item__avatar'\r\n            src={posts[0].owner.avatar_url && posts[0].owner.avatar_url}\r\n            alt='avatar url'\r\n          />\r\n          <a\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n            href={posts[0].owner.html_url}\r\n            className='posts-item__author'\r\n          >\r\n            {posts[0].owner.login}\r\n          </a>\r\n        </div>}\r\n      <ul className={posts ? 'posts posts--show' : 'posts'}>\r\n        <h5>POSTS</h5>\r\n        {posts &&\r\n          posts.map(\r\n            post => post.description && <Post key={post.id} post={post} />\r\n          )}\r\n      </ul>\r\n      {loading && <div className='loader'><Loader /></div>}\r\n      {posts &&\r\n        !posts.length &&\r\n        <p className='posts__error'>This user has not made any publication</p>}\r\n      {error && <p className='posts__error'>{error}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ posts }) => ({ posts })\r\n\r\nexport default connect(mapStateToProps)(Posts)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Posts from '../Templates/Posts/Posts'\r\nimport NewPost from '../Organisms/NewPost/NewPost'\r\n\r\n/**\r\n * This page or component will be responsible for showing the post creation form, in addition to the search input and the list of posts found.\r\n */\r\n\r\nconst Blog = ({ posts }) => {\r\n  return (\r\n    <div className='l-container container container--auth'>\r\n      <NewPost />\r\n      <Posts posts={posts} />\r\n    </div>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  posts: PropTypes.array\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => ({ auth })\r\n\r\nexport default connect(mapStateToProps)(Blog)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getToken } from '../../state/actionCreators'\r\nimport Posts from '../Templates/Posts/Posts'\r\n\r\n/**\r\n * This component is displayed when the user is not authenticated, you can only search for the posts by a username.\r\n */\r\n\r\nclass Home extends Component {\r\n  componentDidMount () {\r\n    const { getToken } = this.props\r\n    const code = this.props.location.search.replace('?code=', '')\r\n    if (code) {\r\n      getToken(code)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { posts } = this.props\r\n    return (\r\n      <div className='l-container container'>\r\n        <Posts posts={posts} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nHome.propTypes = {\r\n  getToken: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getToken (code) {\r\n    dispatch(getToken(code))\r\n  }\r\n})\r\n\r\nconst mapStateToProps = ({ auth, posts }) => ({ auth, posts })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Post from '../Organisms/Post/Post'\r\nimport Loader from '../Atoms/Loader/Loader'\r\nimport API from '../../api/api'\r\nimport arrow from '../../assets/right-arrow.svg'\r\n\r\n/**\r\n * This component is responsible for displaying the full details of any publication, in addition to the possibility of browsing to subsequent publications associated with the same searched user.\r\n */\r\n\r\nclass PostDetail extends Component {\r\n  state = {\r\n    post: null,\r\n    loading: null,\r\n    index: null\r\n  }\r\n\r\n  getPost = async params => {\r\n    this.setState({\r\n      loading: true,\r\n      post: null\r\n    })\r\n\r\n    try {\r\n      let { data } = await API.get(`gists/${params.id}`)\r\n      const { posts: { posts } } = this.props\r\n\r\n      this.setState({\r\n        post: data,\r\n        loading: false,\r\n        index: posts.findIndex(s => s.id === data.id) + 1\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { match: { params } } = this.props\r\n\r\n    this.getPost(params)\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    const { match: { params } } = nextProps\r\n\r\n    this.getPost(params)\r\n  }\r\n\r\n  render () {\r\n    const { post, loading } = this.state\r\n    const { posts: { posts } } = this.props\r\n\r\n    return (\r\n      <div className='l-container container'>\r\n        {posts[this.state.index] &&\r\n          <Link className='next' to={`/post/${posts[this.state.index].id}`}>\r\n            <img className='next__img' src={arrow} alt='arrow' />\r\n          </Link>}\r\n        {post && <Post large post={post} />}\r\n        {loading && <div className='posts-item__loader'><Loader /></div>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nPostDetail.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n  posts: PropTypes.object\r\n}\r\n\r\nconst mapStateToProps = ({ posts }) => ({ posts })\r\n\r\nexport default connect(mapStateToProps)(PostDetail)\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Error404 from '../Pages/Error404'\r\nimport Blog from '../Pages/Blog'\r\nimport Home from '../Pages/Home'\r\nimport PostDetail from '../Pages/PostDetail'\r\n\r\nconst PrivateRoute = ({ component: Component, authed, rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      (authed === true\r\n        ? <Component {...props} />\r\n        : <Redirect\r\n          to={{ pathname: '/blog/', state: { from: props.location } }}\r\n          />)}\r\n  />\r\n)\r\n\r\nconst PublicRoute = ({ component: Component, authed, rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      (authed === false ? <Component {...props} /> : <Redirect to='/posts/' />)}\r\n  />\r\n)\r\n\r\n/**\r\n * In this component the different routes that the application has are defined.\r\n */\r\n\r\nconst Routes = ({ authed }) => {\r\n  return (\r\n    <Fragment>\r\n      <Switch>\r\n        <PublicRoute path='/blog/' authed={authed} exact component={Home} />\r\n        <PrivateRoute path='/posts/' authed={authed} exact component={Blog} />\r\n        <Route path='/post/:id' authed={authed} exact component={PostDetail} />\r\n        <Route component={Error404} />\r\n      </Switch>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nRoutes.propTypes = {\r\n  authed: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '../../Atoms/Button/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport './Header.scss'\r\nimport {\r\n  onRedirectAuth,\r\n  onLogout,\r\n  getData\r\n} from '../../../state/actionCreators'\r\n\r\n/**\r\n * This component will be displayed on all pages of the application, it is useful to navigate to the main page and to authenticate the user.\r\n */\r\n\r\nconst Header = ({\r\n  handleOnRedirect,\r\n  handleOnLogout,\r\n  auth: { loggedIn, user }\r\n}) => (\r\n  <header className='header'>\r\n    <div className='header-container l-container'>\r\n      <Link className='header__link' to={loggedIn ? '/posts/' : '/blog/'}>\r\n        BLOG\r\n      </Link>\r\n      {!loggedIn &&\r\n        <Button text='Sign in' onClick={() => handleOnRedirect()} />}\r\n      {loggedIn &&\r\n        user &&\r\n        <div className='header__profile'>\r\n          <span>{user.login}</span>\r\n          <img className='header__avatar' src={user.avatar_url} alt='' />\r\n          <Button text='Logout' onClick={() => handleOnLogout()} />\r\n        </div>}\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  handleOnRedirect: PropTypes.func.isRequired,\r\n  handleOnLogout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => ({ auth })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleOnRedirect () {\r\n    dispatch(onRedirectAuth())\r\n  },\r\n  handleOnLogout () {\r\n    dispatch(onLogout())\r\n  },\r\n  handleOnSearch (username) {\r\n    dispatch(getData(username))\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Routes from './components/Utils/Routes'\r\nimport Header from './components/Molecules/Header/Header'\r\nimport './App.scss'\r\n\r\n/**\r\n * This is the main component of the application, it will be responsible for containing the other components.\r\n */\r\n\r\nconst App = ({ auth: { loggedIn } }) => (\r\n  <Router>\r\n    <div className='App'>\r\n      <Header />\r\n      <Routes authed={loggedIn} />\r\n    </div>\r\n  </Router>\r\n)\r\n\r\nconst mapStateToProps = ({ auth }) => ({ auth })\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport configureStore from './state/store'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport App from './App.jsx'\r\nimport './index.scss'\r\n\r\nconst { store, persistor } = configureStore()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/right-arrow.00ff0323.svg\";"],"sourceRoot":""}