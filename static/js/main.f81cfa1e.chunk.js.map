{"version":3,"sources":["state/reducers/posts.js","state/actions.js","state/reducers/auth.js","state/reducers/index.js","state/store.js","components/Pages/Error404.jsx","components/Pages/Blog.jsx","api/auth.js","components/Pages/Home.jsx","state/actionCreators.js","components/Utils/Routes.jsx","components/Atoms/Input/Input.jsx","components/Atoms/Button/Button.jsx","components/Molecules/Header/Header.jsx","components/Atoms/Loader/Loader.jsx","components/Templates/Posts/Posts.jsx","App.jsx","api/api.js","serviceWorker.js","index.js"],"names":["posts","state","arguments","length","undefined","action","type","Object","objectSpread","loading","data","error","initialState","loggedIn","token","message","user","auth","payload","reducers","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","Error404","react_default","a","createElement","Blog","ENDPOINT","concat","requestToken","code","axios","post","requestUser","get","Home","getToken","this","props","location","search","replace","Component","connect","dispatch","_ref4","asyncToGenerator","regenerator_default","mark","_callee3","response","wrap","_context3","prev","next","sent","abrupt","t0","stop","_x3","apply","PrivateRoute","_ref","component","authed","rest","Route","assign","render","Redirect","to","pathname","from","PublicRoute","_ref2","Routes","_ref3","Switch","Routes_PublicRoute","path","exact","Routes_PrivateRoute","InputForm","className","classes","label","value","id","theme","minLength","name","placeholder","required","defaultValue","default","autoComplete","disabled","ref","Button","onClick","text","handleOnRedirect","_callee2","URL","_context2","request","responseURL","window","_x2","handleOnLogout","Input_Input","Link","Atoms_Button_Button","Loader","_ref$posts","react","Atoms_Loader_Loader","map","description","style","width","display","src","owner","avatar_url","alt","App","getData","_this$props","HashRouter","Molecules_Header_Header","Templates_Posts_Posts","Utils_Routes","_callee","_context","url","_x","Boolean","hostname","match","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","configureStore","ReactDOM","es","integration_react","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6WAmBeA,EAjBD,WAAwB,IAAvBC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpC,OAAQC,EAAOC,MACb,ICJoB,gBDKlB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBQ,SAAS,IAC9B,ICL4B,wBDM1B,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBQ,SAAS,EAAOT,MAAOK,EAAOK,OACnD,ICNyB,qBDOvB,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEQ,SAAS,EACTE,MAAO,8BAEX,QACE,OAAOV,IEbPW,EAAe,CACnBH,SAAS,EACTI,UAAU,EACVC,MAAO,KACPC,QAAS,KACTC,KAAM,MAiCOC,EA9BF,WAAkC,IAAjChB,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBU,EAAcP,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOC,MACb,IDJyB,gBCKvB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAZ,CAAmBQ,SAAS,IAC9B,IDLyB,wBCMvB,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEY,UAAU,EACVJ,SAAS,EACTK,MAAOT,EAAOa,QAAQJ,MACtBE,KAAMX,EAAOa,QAAQF,KAAKN,OAE9B,IDZsB,qBCapB,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEQ,SAAS,EACTM,QAAS,UAEb,IDjBkB,eCkBhB,OAAOR,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEY,UAAU,EACVC,MAAO,KACPE,KAAM,OAEV,QACE,OAAOf,IC3BEkB,EALEC,0BAAgB,CAC/BpB,QACAiB,SCCII,EAAgB,CACpBC,IAAK,OACLC,aAGIC,EAAmBC,YAAeJ,EAAeF,mFCJxCO,EANE,kBACfC,EAAAC,EAAAC,cAAA,yBCOaC,EARF,WACX,OACEH,EAAAC,EAAAC,cAAA,8DCGSE,EAAQ,sDAAAC,OALH,uBAKG,6BAAAA,OAFO,sCAUfC,EAAe,SAAAC,GAAI,OAC9BC,IAAMC,KAAN,GAAAJ,OAPY,8CAOZ,eAAAA,OAdgB,uBAchB,mBAAAA,OAboB,2CAapB,UAAAA,OACyEE,KAG9DG,EAAc,SAAAvB,GAAK,OAAIqB,IAAMG,IAAN,GAAAN,OATvB,6CASuBA,OAAoBlB,KChBlDyB,8LACiB,IACXC,EAAaC,KAAKC,MAAlBF,SACFN,EAAOO,KAAKC,MAAMC,SAASC,OAAOC,QAAQ,SAAU,IACtDX,GACFM,EAASN,oCAKX,OACEP,EAAAC,EAAAC,cAAA,wBAXaiB,aAwBJC,cAAQ,KANI,SAAAC,GAAQ,MAAK,CACtCR,SADsC,SAC5BN,GACRc,EC4BoB,SAAAd,GACtB,sBAAAe,EAAA1C,OAAA2C,EAAA,EAAA3C,CAAA4C,EAAAvB,EAAAwB,KAAO,SAAAC,EAAML,GAAN,IAAAM,EAAAxC,EAAAE,EAAAE,EAAA,OAAAiC,EAAAvB,EAAA2B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLV,EAAS,CAAE1C,KR9Cc,kBQ6CpBkD,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIkBzB,EAAaC,GAJ/B,cAICoB,EAJDE,EAAAG,KAAAH,EAAAE,KAAA,EAMeJ,EAAS5C,KACxBmC,QAAQ,gBAAiB,IACzBA,QAAQ,gCAAiC,IARzC,cAMC/B,EAND0C,EAAAG,KAAAH,EAAAE,KAAA,GAUcrB,EAAYvB,GAV1B,eAUCE,EAVDwC,EAAAG,KAYCzC,EAAU,CACZJ,QACAE,QAdCwC,EAAAI,OAAA,SAiBIZ,EAAS,CACd1C,KR9DqB,wBQ+DrBY,aAnBC,QAAAsC,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAsBHR,EAAS,CAAE1C,KRjES,uBQ2CjB,yBAAAkD,EAAAM,SAAAT,EAAAZ,KAAA,aAAP,gBAAAsB,GAAA,OAAAd,EAAAe,MAAAvB,KAAAvC,YAAA,GD7BWsC,CAASN,OAIPa,CAAkCR,GEtB3C0B,EAAe,SAAAC,GAAA,IAAcpB,EAAdoB,EAAGC,UAAsBC,EAAzBF,EAAyBE,OAAQC,EAAjCH,EAAiCG,KAAjC,OACnB1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD/D,OAAAgE,OAAA,GACMF,EADN,CAEEG,OAAQ,SAAA9B,GAAK,OACC,IAAX0B,EACGzC,EAAAC,EAAAC,cAACiB,EAAcJ,GACff,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUC,GAAI,CAAEC,SAAU,IAAK1E,MAAO,CAAE2E,KAAMlC,EAAMC,kBAIxDkC,EAAc,SAAAC,GAAA,IAAchC,EAAdgC,EAAGX,UAAsBC,EAAzBU,EAAyBV,OAAQC,EAAjCS,EAAiCT,KAAjC,OAClB1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD/D,OAAAgE,OAAA,GACMF,EADN,CAEEG,OAAQ,SAAA9B,GAAK,OACC,IAAX0B,EAAmBzC,EAAAC,EAAAC,cAACiB,EAAcJ,GAAYf,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,CAAUC,GAAG,eAcnDK,EAVA,SAAAC,GAAgB,IAAbZ,EAAaY,EAAbZ,OAChB,OACEzC,EAAAC,EAAAC,cAACoD,EAAA,EAAD,KACEtD,EAAAC,EAAAC,cAACqD,EAAD,CAAaC,KAAK,IAAIf,OAAQA,EAAQgB,OAAK,EAACjB,UAAW5B,IACvDZ,EAAAC,EAAAC,cAACwD,EAAD,CAAcF,KAAK,QAAQf,OAAQA,EAAQgB,OAAK,EAACjB,UAAWrC,IAC5DH,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAOH,UAAWzC,MCST4D,SAlCG,SAAA5C,GAAK,OACrBf,EAAAC,EAAAC,cAAA,OAAK0D,UAAW7C,EAAM8C,SACpB7D,EAAAC,EAAAC,cAAA,SAAO0D,UAAU,IAAI7C,EAAM+C,OAC3B9D,EAAAC,EAAAC,cAAA,SACE6D,MAAOhD,EAAMgD,MACbC,GAAIjD,EAAMiD,GACVJ,UAAW,SAAW7C,EAAMkD,MAC5BtF,KAAMoC,EAAMpC,KACZuF,UAAWnD,EAAMmD,UACjBC,KAAMpD,EAAMoD,KACZC,YAAarD,EAAMqD,YACnBC,SAAUtD,EAAMsD,SAChBC,aAAcvD,EAAMwD,QACpBC,aAAczD,EAAMyD,aACpBC,SAAU1D,EAAM0D,SAChBC,IAAK3D,EAAM2D,SCCFC,SAhBA,SAAA5D,GAAK,OAClBf,EAAAC,EAAAC,cAAA,UACE0D,UAAW,UAAY7C,EAAM6C,UAC7BgB,QAAS7D,EAAM6D,QACfZ,GAAIjD,EAAMiD,GACVrF,KAAK,UAEJoC,EAAM8D,gBCyBIzD,qBAXS,SAAA+B,GAAA,MAAe,CAAE7D,KAAjB6D,EAAG7D,OAEA,SAAA+B,GAAQ,MAAK,CACtCyD,iBADsC,WAEpCzD,EJIF,eAAAgC,EAAAzE,OAAA2C,EAAA,EAAA3C,CAAA4C,EAAAvB,EAAAwB,KAAO,SAAAsD,EAAM1D,GAAN,IAAAM,EAAAqD,EAAA,OAAAxD,EAAAvB,EAAA2B,KAAA,SAAAqD,GAAA,cAAAA,EAAAnD,KAAAmD,EAAAlD,MAAA,cACLV,EAAS,CAAE1C,KR9BiB,qBQ6BvBsG,EAAAnD,KAAA,EAAAmD,EAAAlD,KAAA,EFpBwBvB,IAAMG,IAAN,GAAAN,OAAaD,IEoBrC,cAICuB,EAJDsD,EAAAjD,KAMCgD,EAAMrD,EAASuD,QAAQC,YAE3BC,OAAOpE,SAAWgE,EARfC,EAAAhD,OAAA,SAUIZ,EAAS,CACd1C,KRvCwB,8BQ4BvB,QAAAsG,EAAAnD,KAAA,GAAAmD,EAAA/C,GAAA+C,EAAA,SAcH5D,EAAS,CAAE1C,KRzCY,0BQ2BpB,yBAAAsG,EAAA9C,SAAA4C,EAAAjE,KAAA,aAAP,gBAAAuE,GAAA,OAAAhC,EAAAhB,MAAAvB,KAAAvC,YAAA,KIFA+G,eAJsC,WAKpCjE,EJgD2B,CAAE1C,KRrEX,oBYyBPyC,CA5BA,SAAAmB,GAAA,IAAGuC,EAAHvC,EAAGuC,iBAAkBQ,EAArB/C,EAAqB+C,eAAwBpG,EAA7CqD,EAAqCjD,KAAQJ,SAA7C,OACbc,EAAAC,EAAAC,cAAA,UAAQ0D,UAAU,UAChB5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,gCACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,0BACb5D,EAAAC,EAAAC,cAAA,MAAI0D,UAAU,0BAAd,QACA5D,EAAAC,EAAAC,cAACqF,EAAD,CAAWnB,YAAY,YAAYH,MAAM,qBACzCjE,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CAAM5B,UAAU,yBAAyBb,GAAI7D,EAAW,QAAU,KAAlE,eAIAA,GACAc,EAAAC,EAAAC,cAACuF,EAAD,CAAQZ,KAAK,UAAUD,QAAS,kBAAME,OACvC5F,GAAYc,EAAAC,EAAAC,cAACuF,EAAD,CAAQZ,KAAK,SAASD,QAAS,kBAAMU,YCVzCI,eAPA,kBACb1F,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,WACb5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,SACf5D,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,YCuBJxC,cAFS,SAAA+B,GAAA,MAAgB,CAAE9E,MAAlB8E,EAAG9E,QAEZ+C,CAzBD,SAAAmB,GAAmC,IAAAoD,EAAApD,EAAhClE,MAASA,EAAuBsH,EAAvBtH,MAAOS,EAAgB6G,EAAhB7G,QAC/B,OACEkB,EAAAC,EAAAC,cAAC0F,EAAA,SAAD,KACG9G,GAAWkB,EAAAC,EAAAC,cAAC2F,EAAD,MACZ7F,EAAAC,EAAAC,cAAA,UACG7B,GACCA,EAAMyH,IACJ,SAAArF,GAAI,OACFA,EAAKsF,aACL/F,EAAAC,EAAAC,cAAA,MAAIP,IAAKc,EAAKuD,IACZhE,EAAAC,EAAAC,cAAA,OACE8F,MAAO,CAAEC,MAAO,OAAQC,QAAS,UACjCC,IAAK1F,EAAK2F,MAAMC,WAChBC,IAAI,eAENtG,EAAAC,EAAAC,cAAA,YAAOO,EAAKsF,oBCTtBQ,+LAGFC,EADoB1F,KAAKC,MAAjByF,4CAIA,IAAAC,EAC8B3F,KAAKC,MAAnC1C,EADAoI,EACApI,MAAea,EADfuH,EACOnH,KAAQJ,SACvB,OACEc,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAAA,OAAK0D,UAAU,OACb5D,EAAAC,EAAAC,cAACyG,EAAD,MACA3G,EAAAC,EAAAC,cAAC0G,EAAD,CAAOvI,MAAOA,IACd2B,EAAAC,EAAAC,cAAC2G,EAAD,CAAQpE,OAAQvD,aAbRiC,aA4BHC,cAFS,SAAAmB,GAAA,MAAsB,CAAElE,MAAxBkE,EAAGlE,MAA4BiB,KAA/BiD,EAAUjD,OANP,SAAA+B,GAAQ,MAAK,CACtCmF,QADsC,WAEpCnF,EPhBF,eAAAkB,EAAA3D,OAAA2C,EAAA,EAAA3C,CAAA4C,EAAAvB,EAAAwB,KAAO,SAAAqF,EAAMzF,GAAN,IAAA8B,EAAApE,EAAA,OAAAyC,EAAAvB,EAAA2B,KAAA,SAAAmF,GAAA,cAAAA,EAAAjF,KAAAiF,EAAAhF,MAAA,cACLV,EAAS,CAAE1C,KRjBS,kBQgBfoI,EAAAjF,KAAA,EAAAiF,EAAAhF,KAAA,EQZiBiF,ERgBY,eQhBLxG,IAAMG,IAAN,GAAAN,OAFhB,yBAEgB,KAAAA,OAAyB2G,IRYjD,cAAA7D,EAAA4D,EAAA/E,KAIGjD,EAJHoE,EAIGpE,KAJHgI,EAAA9E,OAAA,SAMIZ,EAAS,CACd1C,KRtBwB,wBQuBxBI,UARC,OAAAgI,EAAAjF,KAAA,EAAAiF,EAAA7E,GAAA6E,EAAA,SAWH1F,EAAS,CAAE1C,KRzBY,uBQcpB,yBAAAoI,EAAA5E,OQZiB,IAAA6E,GRYjBF,EAAAhG,KAAA,YAAP,gBAAAmG,GAAA,OAAA1E,EAAAF,MAAAvB,KAAAvC,YAAA,OOsBa6C,CAA6CmF,GE1BxCW,QACW,cAA7B9B,OAAOpE,SAASmG,UAEe,UAA7B/B,OAAOpE,SAASmG,UAEhB/B,OAAOpE,SAASmG,SAASC,MACvB,kEdJS,WACb,IAAIC,EAAQC,sBACVzH,EACA0H,8BAAoBC,0BAAgBC,OAKtC,MAAO,CAAEJ,QAAOK,UAFAC,YAAaN,IeVFO,GAArBP,YAAOK,gBAEfG,IAAShF,OACP7C,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAUT,MAAOA,IACfrH,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAajJ,QAAS,KAAM4I,UAAWA,IACrC1H,EAAAC,EAAAC,cAAC8H,EAAD,QAGJC,SAASC,eAAe,SD2GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f81cfa1e.chunk.js","sourcesContent":["import { GET_DATA, GET_DATA_SUCCESS, GET_DATA_FAIL } from '../actions'\r\n\r\nconst posts = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_DATA:\r\n      return { ...state, loading: true }\r\n    case GET_DATA_SUCCESS:\r\n      return { ...state, loading: false, posts: action.data }\r\n    case GET_DATA_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: 'Error while fetching data'\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default posts\r\n","export const GET_DATA = 'posts/REQUEST'\r\nexport const GET_DATA_SUCCESS = 'posts/REQUEST_SUCCESS'\r\nexport const GET_DATA_FAIL = 'posts/REQUEST_FAIL'\r\n\r\nexport const REDIRECT_REQUEST = 'redirect/REQUEST'\r\nexport const REDIRECT_SUCCESS = 'redirect/REQUEST_SUCCESS'\r\nexport const REDIRECT_FAIL = 'redirect/REQUEST_FAIL'\r\n\r\nexport const TOKEN_REQUEST = 'token/REQUEST'\r\nexport const TOKEN_SUCCESS = 'token/REQUEST_SUCCESS'\r\nexport const TOKEN_FAIL = 'token/REQUEST_FAIL'\r\nexport const LOGOUT = 'token/LOGOUT'\r\n","import { TOKEN_REQUEST, TOKEN_SUCCESS, TOKEN_FAIL, LOGOUT } from '../actions'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  loggedIn: false,\r\n  token: null,\r\n  message: null,\r\n  user: null\r\n}\r\n\r\nconst auth = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOKEN_REQUEST:\r\n      return { ...state, loading: true }\r\n    case TOKEN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        loading: false,\r\n        token: action.payload.token,\r\n        user: action.payload.user.data\r\n      }\r\n    case TOKEN_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: 'Error'\r\n      }\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        token: null,\r\n        user: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default auth\r\n","import { combineReducers } from 'redux'\r\nimport posts from './posts'\r\nimport auth from './auth'\r\n\r\nconst reducers = combineReducers({\r\n  posts,\r\n  auth\r\n})\r\n\r\nexport default reducers\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport reducers from './reducers/'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\n\r\nexport default () => {\r\n  let store = createStore(\r\n    persistedReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n  )\r\n\r\n  let persistor = persistStore(store)\r\n\r\n  return { store, persistor }\r\n}\r\n","import React from 'react'\r\n\r\nconst Error404 = () => (\r\n  <div>\r\n    Error 404\r\n  </div>\r\n)\r\n\r\nexport default Error404\r\n","import React from 'react'\r\n\r\nconst Blog = () => {\r\n  return (\r\n    <div>\r\n      Blog\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import axios from 'axios'\r\n\r\nconst CLIENT_ID = 'a9b9a9cdd993b995f360'\r\nconst CLIENT_SECRET = '4c689dd1d7bc53aa6482bfb09b2edf6d0436cd29'\r\n\r\nexport const REDIRECT_URI = 'https://andres9722.github.io/blog/'\r\n\r\nexport const ENDPOINT = `https://github.com/login/oauth/authorize?client_id=${CLIENT_ID}&scope=user&redirect_uri=${REDIRECT_URI}`\r\n\r\nconst TOKEN = 'https://github.com/login/oauth/access_token'\r\n\r\nconst USER = 'https://api.github.com/user?access_token='\r\n\r\nexport const requestAuth = () => axios.get(`${ENDPOINT}`)\r\n\r\nexport const requestToken = code =>\r\n  axios.post(\r\n    `${TOKEN}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&code=${code}`\r\n  )\r\n\r\nexport const requestUser = token => axios.get(`${USER}${token}`)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getToken } from '../../state/actionCreators'\r\n\r\nclass Home extends Component {\r\n  componentDidMount () {\r\n    const { getToken } = this.props\r\n    const code = this.props.location.search.replace('?code=', '')\r\n    if (code) {\r\n      getToken(code)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        Hi\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getToken (code) {\r\n    dispatch(getToken(code))\r\n  }\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(Home)\r\n","import {\r\n  GET_DATA,\r\n  GET_DATA_SUCCESS,\r\n  GET_DATA_FAIL,\r\n  REDIRECT_REQUEST,\r\n  REDIRECT_SUCCESS,\r\n  REDIRECT_FAIL,\r\n  TOKEN_REQUEST,\r\n  TOKEN_SUCCESS,\r\n  TOKEN_FAIL,\r\n  LOGOUT\r\n} from './actions'\r\nimport { getFromApi } from '../api/api'\r\nimport { requestAuth, requestToken, requestUser } from '../api/auth'\r\n\r\nexport const getData = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: GET_DATA })\r\n\r\n    try {\r\n      let { data } = await getFromApi('gists/public')\r\n\r\n      return dispatch({\r\n        type: GET_DATA_SUCCESS,\r\n        data\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: GET_DATA_FAIL })\r\n    }\r\n  }\r\n}\r\n\r\nexport const onRedirectAuth = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: REDIRECT_REQUEST })\r\n\r\n    try {\r\n      let response = await requestAuth()\r\n\r\n      let URL = response.request.responseURL\r\n\r\n      window.location = URL\r\n\r\n      return dispatch({\r\n        type: REDIRECT_SUCCESS\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: REDIRECT_FAIL })\r\n    }\r\n  }\r\n}\r\n\r\nexport const getToken = code => {\r\n  return async dispatch => {\r\n    dispatch({ type: TOKEN_REQUEST })\r\n\r\n    try {\r\n      let response = await requestToken(code)\r\n\r\n      let token = await response.data\r\n        .replace('access_token=', '')\r\n        .replace('&scope=user&token_type=bearer', '')\r\n\r\n      let user = await requestUser(token)\r\n\r\n      let payload = {\r\n        token,\r\n        user\r\n      }\r\n\r\n      return dispatch({\r\n        type: TOKEN_SUCCESS,\r\n        payload\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: TOKEN_FAIL })\r\n    }\r\n  }\r\n}\r\n\r\nexport const onLogout = () => ({ type: LOGOUT })\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Error404 from '../Pages/Error404'\r\nimport Blog from '../Pages/Blog'\r\nimport Home from '../Pages/Home'\r\n\r\nconst PrivateRoute = ({ component: Component, authed, rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      (authed === true\r\n        ? <Component {...props} />\r\n        : <Redirect to={{ pathname: '/', state: { from: props.location } }} />)}\r\n  />\r\n)\r\n\r\nconst PublicRoute = ({ component: Component, authed, rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      (authed === false ? <Component {...props} /> : <Redirect to='/blog' />)}\r\n  />\r\n)\r\n\r\nconst Routes = ({ authed }) => {\r\n  return (\r\n    <Switch>\r\n      <PublicRoute path='/' authed={authed} exact component={Home} />\r\n      <PrivateRoute path='/blog' authed={authed} exact component={Blog} />\r\n      <Route component={Error404} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Input.scss'\r\n\r\nconst InputForm = props => (\r\n  <div className={props.classes}>\r\n    <label className=''>{props.label}</label>\r\n    <input\r\n      value={props.value}\r\n      id={props.id}\r\n      className={'input ' + props.theme}\r\n      type={props.type}\r\n      minLength={props.minLength}\r\n      name={props.name}\r\n      placeholder={props.placeholder}\r\n      required={props.required}\r\n      defaultValue={props.default}\r\n      autoComplete={props.autoComplete}\r\n      disabled={props.disabled}\r\n      ref={props.ref}\r\n    />\r\n  </div>\r\n)\r\n\r\nInputForm.propTypes = {\r\n  classes: PropTypes.string,\r\n  label: PropTypes.string,\r\n  minLength: PropTypes.number,\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  defaultValue: PropTypes.string,\r\n  autoComplete: PropTypes.bool,\r\n  value: PropTypes.string\r\n}\r\n\r\nexport default InputForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Button.scss'\r\n\r\nconst Button = props => (\r\n  <button\r\n    className={'button ' + props.className}\r\n    onClick={props.onClick}\r\n    id={props.id}\r\n    type='button'\r\n  >\r\n    {props.text}\r\n  </button>\r\n)\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport InputForm from '../../Atoms/Input/Input'\r\nimport Button from '../../Atoms/Button/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport './Header.scss'\r\nimport { onRedirectAuth, onLogout } from '../../../state/actionCreators'\r\n\r\nconst Header = ({ handleOnRedirect, handleOnLogout, auth: { loggedIn } }) => (\r\n  <header className='header'>\r\n    <div className='header-container l-container'>\r\n      <div className='header-container__main'>\r\n        <h1 className='header-container__logo'>BLOG</h1>\r\n        <InputForm placeholder='Search...' theme='input--secondary' />\r\n        <Link className='header-container__link' to={loggedIn ? '/blog' : '/'}>\r\n          All posts\r\n        </Link>\r\n      </div>\r\n      {!loggedIn &&\r\n        <Button text='Sign in' onClick={() => handleOnRedirect()} />}\r\n      {loggedIn && <Button text='Logout' onClick={() => handleOnLogout()} />}\r\n    </div>\r\n  </header>\r\n)\r\n\r\nconst mapStateToProps = ({ auth }) => ({ auth })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleOnRedirect () {\r\n    dispatch(onRedirectAuth())\r\n  },\r\n  handleOnLogout () {\r\n    dispatch(onLogout())\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => (\r\n  <div className='spinner'>\r\n    <div className='dot1' />\r\n    <div className='dot2' />\r\n  </div>\r\n)\r\n\r\nexport default Loader\r\n","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Loader from '../../Atoms/Loader/Loader'\r\n\r\nconst Posts = ({ posts: { posts, loading } }) => {\r\n  return (\r\n    <Fragment>\r\n      {loading && <Loader />}\r\n      <ul>\r\n        {posts &&\r\n          posts.map(\r\n            post =>\r\n              post.description &&\r\n              <li key={post.id}>\r\n                <img\r\n                  style={{ width: '30px', display: 'inline' }}\r\n                  src={post.owner.avatar_url}\r\n                  alt='avatar url'\r\n                />\r\n                <span>{post.description}</span>\r\n              </li>\r\n          )}\r\n      </ul>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ posts }) => ({ posts })\r\n\r\nexport default connect(mapStateToProps)(Posts)\r\n","import React, { Component } from 'react'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport Routes from './components/Utils/Routes'\nimport Header from './components/Molecules/Header/Header'\nimport { getData } from './state/actionCreators'\n\nimport './App.scss'\nimport Posts from './components/Templates/Posts/Posts'\n\nclass App extends Component {\n  componentDidMount () {\n    const { getData } = this.props\n    getData()\n  }\n\n  render () {\n    const { posts, auth: { loggedIn } } = this.props\n    return (\n      <Router>\n        <div className='App'>\n          <Header />\n          <Posts posts={posts} />\n          <Routes authed={loggedIn} />\n        </div>\n      </Router>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getData () {\n    dispatch(getData())\n  }\n})\n\nconst mapStateToProps = ({ posts, auth }) => ({ posts, auth })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import axios from 'axios'\r\n\r\nconst ENDPOINT = 'https://api.github.com'\r\n\r\nexport const getFromApi = url => axios.get(`${ENDPOINT}/${url}`)\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport configureStore from './state/store'\nimport './index.scss'\nimport App from './App.jsx'\n// import Loader from './components/Atoms/Loader/Loader'\nimport * as serviceWorker from './serviceWorker'\n\nconst { store, persistor } = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}