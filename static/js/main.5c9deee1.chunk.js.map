{"version":3,"sources":["state/reducers/auth.js","state/actions.js","state/reducers/ui.js","state/reducers/index.js","state/reducers/posts.js","state/store.js","serviceWorker.js","components/Pages/Error404.jsx","components/Atoms/Loader/Loader.jsx","components/Atoms/Button/Button.jsx","components/Atoms/Input/Input.jsx","components/Atoms/Input/SubmitForm.jsx","components/Atoms/Textarea/Textarea.jsx","api/api.js","api/auth.js","state/actionCreators.js","components/Organisms/NewPost/NewPost.jsx","components/Organisms/Modal/Modal.jsx","components/Organisms/Post/Post.jsx","components/Molecules/FormSearch/FormSearch.jsx","components/Templates/Posts/Posts.jsx","components/Pages/Blog.jsx","components/Pages/Home.jsx","components/Pages/PostDetail.jsx","components/Utils/Routes.jsx","components/Molecules/Header/Header.jsx","App.jsx","index.js","assets/right-arrow.svg"],"names":["initialState","loading","loggedIn","token","message","user","auth","state","arguments","length","undefined","action","type","Object","objectSpread","payload","data","initialStateInteraction","showModal","ui","reducers","combineReducers","posts","error","post","toast","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","Boolean","window","location","hostname","match","Error404","react_default","a","createElement","className","Loader","Button","props","theme","onClick","id","text","InputForm","react","onChange","value","minLength","name","placeholder","required","defaultValue","default","autoComplete","disabled","ref","SubmitForm","classes","Textarea","label","cols","rows","API","url","axios","get","concat","method","headers","Content-Type","authorization","ENDPOINT","requestToken","code","requestUser","getData","username","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","_ref2","wrap","_context","prev","next","abrupt","trim","sent","t0","stop","this","_x","apply","NewPost","handleOnSubmit","e","preventDefault","_this$props","_this","handleOnCreatePost","handleOnUpdatePost","_this$props$auth","update","postToUpdate","form","target","description","public","files","post.md","content","entityTitle","info","updateEntityTitle","entityFields","_this$props2","onSubmit","map","field","kind","Input_Input","Atoms_Textarea_Textarea","Atoms_Loader_Loader","lib","position","autoClose","hideProgressBar","pauseOnVisibilityChange","Input_SubmitForm","Component","connect","_ref6","_callee4","_context4","_x4","createPost","_ref7","_callee5","_context5","_x5","updatePost","Modal","show","closeModal","children","handleOnShowModal","large","Date","updated_at","toDateString","slice","react_timeago_lib_default","date","Link","to","owner","login","Atoms_Button_Button","values","i","react_markdown_default","source","Organisms_Modal_Modal","Organisms_NewPost_NewPost","handleOnSearch","_ref$posts","Molecules_FormSearch_FormSearch","src","avatar_url","alt","rel","href","html_url","Organisms_Post_Post","Templates_Posts_Posts","Home","getToken","search","replace","_ref5","_callee3","response","_context3","_x3","PostDetail","index","getPost","params","setState","findIndex","s","console","log","nextProps","_this$state","arrow","_ref3","PrivateRoute","component","authed","rest","Route","assign","render","Redirect","pathname","from","PublicRoute","Routes","Switch","Routes_PublicRoute","path","exact","Routes_PrivateRoute","Blog","handleOnRedirect","_callee2","_ref4","request","URL","_context2","responseURL","_x2","handleOnLogout","_ref$auth","BrowserRouter","Molecules_Header_Header","Utils_Routes","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","configureStore","ReactDOM","es","integration_react","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5c9deee1.chunk.js","sourcesContent":["import { TOKEN_REQUEST, TOKEN_SUCCESS, TOKEN_FAIL, LOGOUT } from '../actions'\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  loggedIn: false,\r\n  token: null,\r\n  message: null,\r\n  user: null\r\n}\r\n\r\nconst auth = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TOKEN_REQUEST:\r\n      return { ...state, loading: true }\r\n    case TOKEN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n        loading: false,\r\n        token: action.payload.token,\r\n        user: action.payload.user.data\r\n      }\r\n    case TOKEN_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        message: 'Error'\r\n      }\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        loggedIn: false,\r\n        token: null,\r\n        user: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default auth\r\n","export const GET_DATA_REQUEST = 'posts/REQUEST'\r\nexport const GET_DATA_SUCCESS = 'posts/REQUEST_SUCCESS'\r\nexport const GET_DATA_FAIL = 'posts/REQUEST_FAIL'\r\n\r\nexport const REDIRECT_REQUEST = 'redirect/REQUEST'\r\nexport const REDIRECT_SUCCESS = 'redirect/REQUEST_SUCCESS'\r\nexport const REDIRECT_FAIL = 'redirect/REQUEST_FAIL'\r\n\r\nexport const CREATE_POST_REQUEST = 'post/REQUEST'\r\nexport const CREATE_POST_SUCCESS = 'post/REQUEST_SUCCESS'\r\nexport const CREATE_POST_FAIL = 'post/REQUEST_FAIL'\r\n\r\nexport const UPDATE_POST_REQUEST = 'post-update/REQUEST'\r\nexport const UPDATE_POST_SUCCESS = 'post-update/REQUEST_SUCCESS'\r\nexport const UPDATE_POST_FAIL = 'post-update/REQUEST_FAIL'\r\n\r\nexport const SEARCH_USER_GISTS_REQUEST = 'search/REQUEST'\r\nexport const SEARCH_USER_GISTS_SUCCESS = 'search/REQUEST_SUCCESS'\r\nexport const SEARCH_USER_GISTS_FAIL = 'search/REQUEST_FAIL'\r\n\r\nexport const TOKEN_REQUEST = 'token/REQUEST'\r\nexport const TOKEN_SUCCESS = 'token/REQUEST_SUCCESS'\r\nexport const TOKEN_FAIL = 'token/REQUEST_FAIL'\r\nexport const LOGOUT = 'token/LOGOUT'\r\n\r\nexport const SHOW_MODAL = 'modal/SHOW'\r\n","import { SHOW_MODAL } from '../actions'\r\n\r\nconst initialStateInteraction = {\r\n  showModal: false\r\n}\r\n\r\nconst ui = (state = initialStateInteraction, action) => {\r\n  switch (action.type) {\r\n    case SHOW_MODAL:\r\n      return { ...state, showModal: !state.showModal }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default ui\r\n","import { combineReducers } from 'redux'\r\nimport { posts, post } from './posts'\r\nimport auth from './auth'\r\nimport ui from './ui'\r\n\r\nconst reducers = combineReducers({\r\n  posts,\r\n  post,\r\n  auth,\r\n  ui\r\n})\r\n\r\nexport default reducers\r\n","import {\r\n  GET_DATA_SUCCESS,\r\n  GET_DATA_FAIL,\r\n  GET_DATA_REQUEST,\r\n  CREATE_POST_REQUEST,\r\n  CREATE_POST_SUCCESS,\r\n  CREATE_POST_FAIL,\r\n  UPDATE_POST_REQUEST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_FAIL\r\n} from '../actions'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const post = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_POST_REQUEST:\r\n      return { ...state, loading: true }\r\n    case UPDATE_POST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n    case CREATE_POST_SUCCESS:\r\n      toast('the publication was created correctly')\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n    case UPDATE_POST_SUCCESS:\r\n      toast('the publication was updated correctly')\r\n      return { ...state, loading: false }\r\n    case CREATE_POST_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: 'Error while create post'\r\n      }\r\n    case UPDATE_POST_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: 'Error while create post'\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const posts = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case GET_DATA_REQUEST:\r\n      return { ...state, loading: true, error: null }\r\n    case GET_DATA_SUCCESS:\r\n      return { ...state, loading: false, posts: action.data, error: null }\r\n    case GET_DATA_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error,\r\n        posts: null\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport reducers from './reducers/'\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['post']\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers)\r\n\r\nexport default () => {\r\n  let store = createStore(\r\n    persistedReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n  )\r\n\r\n  let persistor = persistStore(store)\r\n\r\n  return { store, persistor }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nconst Error404 = () => (\r\n  <div className='l-container container'>\r\n    Error 404\r\n  </div>\r\n)\r\n\r\nexport default Error404\r\n","import React from 'react'\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => (\r\n  <div className='spinner'>\r\n    <div className='dot1' />\r\n    <div className='dot2' />\r\n  </div>\r\n)\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Button.scss'\r\n\r\nconst Button = props => (\r\n  <button\r\n    className={'button ' + props.theme}\r\n    onClick={props.onClick}\r\n    id={props.id}\r\n    type='button'\r\n  >\r\n    {props.text}\r\n  </button>\r\n)\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func\r\n}\r\n\r\nexport default Button\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Input.scss'\r\n\r\nconst InputForm = props => (\r\n  <Fragment>\r\n    <input\r\n      onChange={props.onChange}\r\n      value={props.value}\r\n      id={props.id}\r\n      className={'input ' + props.theme}\r\n      type={props.type}\r\n      minLength={props.minLength}\r\n      name={props.name}\r\n      placeholder={props.placeholder}\r\n      required={props.required}\r\n      defaultValue={props.default}\r\n      autoComplete={props.autoComplete}\r\n      disabled={props.disabled}\r\n      ref={props.ref}\r\n    />\r\n  </Fragment>\r\n)\r\n\r\nInputForm.propTypes = {\r\n  classes: PropTypes.string,\r\n  label: PropTypes.string,\r\n  minLength: PropTypes.number,\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  defaultValue: PropTypes.string,\r\n  autoComplete: PropTypes.bool,\r\n  value: PropTypes.string\r\n}\r\n\r\nexport default InputForm\r\n","import React from 'react'\r\n\r\nconst SubmitForm = props => (\r\n  <div className={props.classes}>\r\n    <input\r\n      type='submit'\r\n      className={'button ' + props.theme}\r\n      value={props.text}\r\n      disabled={props.disabled}\r\n    />\r\n  </div>\r\n)\r\n\r\nexport default SubmitForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './Textarea.scss'\r\n\r\nconst Textarea = props => (\r\n  <div className={props.classes}>\r\n    <label className=''>{props.label}</label>\r\n    <textarea\r\n      cols='30'\r\n      rows='15'\r\n      value={props.value}\r\n      id={props.id}\r\n      className={'input ' + props.theme}\r\n      type={props.type}\r\n      minLength={props.minLength}\r\n      name={props.name}\r\n      placeholder={props.placeholder}\r\n      required={props.required}\r\n      defaultValue={props.default}\r\n      disabled={props.disabled}\r\n      ref={props.ref}\r\n    />\r\n  </div>\r\n)\r\n\r\nTextarea.propTypes = {\r\n  classes: PropTypes.string,\r\n  label: PropTypes.string,\r\n  minLength: PropTypes.number,\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  required: PropTypes.bool,\r\n  defaultValue: PropTypes.string,\r\n  autoComplete: PropTypes.bool,\r\n  value: PropTypes.string\r\n}\r\n\r\nexport default Textarea\r\n","import axios from 'axios'\r\n\r\nconst ENDPOINT = 'https://api.github.com'\r\n\r\nexport default class API {\r\n  static get (url) {\r\n    return axios.get(`${ENDPOINT}/${url}`)\r\n  }\r\n\r\n  static post (post, token) {\r\n    return axios({\r\n      method: 'POST',\r\n      url: 'https://api.github.com/gists',\r\n      data: post,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `token ${token}`\r\n      }\r\n    })\r\n  }\r\n\r\n  static update (id, post, token) {\r\n    return axios({\r\n      method: 'PATCH',\r\n      url: `https://api.github.com/gists/${id}`,\r\n      data: post,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: `token ${token}`\r\n      }\r\n    })\r\n  }\r\n}\r\n","import axios from 'axios'\r\n\r\nconst CLIENT_ID = 'a9b9a9cdd993b995f360'\r\nconst CLIENT_SECRET = '4c689dd1d7bc53aa6482bfb09b2edf6d0436cd29'\r\n\r\nexport const REDIRECT_URI = 'https://andres9722.github.io/blog/'\r\n\r\nexport const ENDPOINT = `https://github.com/login/oauth/authorize?client_id=${CLIENT_ID}&scope=user,gist&redirect_uri=${REDIRECT_URI}`\r\n\r\nconst TOKEN = 'https://github.com/login/oauth/access_token'\r\n\r\nconst USER = 'https://api.github.com/user?access_token='\r\n\r\nexport const requestAuth = () => axios.get(`${ENDPOINT}`)\r\n\r\nexport const requestToken = code =>\r\n  axios.post(\r\n    `${TOKEN}?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&code=${code}`\r\n  )\r\n\r\nexport const requestUser = token => axios.get(`${USER}${token}`)\r\n","import {\r\n  GET_DATA_SUCCESS,\r\n  GET_DATA_FAIL,\r\n  REDIRECT_REQUEST,\r\n  REDIRECT_SUCCESS,\r\n  REDIRECT_FAIL,\r\n  TOKEN_REQUEST,\r\n  TOKEN_SUCCESS,\r\n  TOKEN_FAIL,\r\n  LOGOUT,\r\n  GET_DATA_REQUEST,\r\n  CREATE_POST_REQUEST,\r\n  CREATE_POST_SUCCESS,\r\n  CREATE_POST_FAIL,\r\n  SHOW_MODAL,\r\n  UPDATE_POST_REQUEST,\r\n  UPDATE_POST_SUCCESS,\r\n  UPDATE_POST_FAIL\r\n} from './actions'\r\nimport API from '../api/api'\r\nimport { requestAuth, requestToken, requestUser } from '../api/auth'\r\n\r\nexport const getData = username => {\r\n  return async dispatch => {\r\n    dispatch({ type: GET_DATA_REQUEST })\r\n\r\n    if (username === '') {\r\n      return dispatch({\r\n        type: GET_DATA_SUCCESS,\r\n        data: null\r\n      })\r\n    }\r\n\r\n    try {\r\n      let { data } = await API.get(`users/${username.trim()}/gists`)\r\n\r\n      return dispatch({\r\n        type: GET_DATA_SUCCESS,\r\n        data\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: GET_DATA_FAIL, error: error.message })\r\n    }\r\n  }\r\n}\r\n\r\nexport const onRedirectAuth = () => {\r\n  return async dispatch => {\r\n    dispatch({ type: REDIRECT_REQUEST })\r\n\r\n    try {\r\n      let { request } = await requestAuth()\r\n\r\n      let URL = request.responseURL\r\n\r\n      window.location = URL\r\n\r\n      return dispatch({\r\n        type: REDIRECT_SUCCESS\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: REDIRECT_FAIL })\r\n    }\r\n  }\r\n}\r\n\r\nexport const getToken = code => {\r\n  return async dispatch => {\r\n    dispatch({ type: TOKEN_REQUEST })\r\n\r\n    try {\r\n      let response = await requestToken(code)\r\n\r\n      let token = await response.data\r\n        .replace('access_token=', '')\r\n        .replace('&scope=gist%2Cuser&token_type=bearer', '')\r\n\r\n      let user = await requestUser(token)\r\n\r\n      let payload = {\r\n        token,\r\n        user\r\n      }\r\n\r\n      return dispatch({\r\n        type: TOKEN_SUCCESS,\r\n        payload\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: TOKEN_FAIL })\r\n    }\r\n  }\r\n}\r\n\r\nexport const onLogout = () => ({ type: LOGOUT })\r\n\r\nexport const createPost = (post, token) => {\r\n  return async dispatch => {\r\n    dispatch({ type: CREATE_POST_REQUEST })\r\n\r\n    try {\r\n      await API.post(post, token)\r\n\r\n      return dispatch({\r\n        type: CREATE_POST_SUCCESS\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: CREATE_POST_FAIL })\r\n    }\r\n  }\r\n}\r\n\r\nexport const updatePost = (id, post, token) => {\r\n  return async dispatch => {\r\n    dispatch({ type: UPDATE_POST_REQUEST })\r\n\r\n    try {\r\n      await API.update(id, post, token)\r\n\r\n      return dispatch({\r\n        type: UPDATE_POST_SUCCESS\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: UPDATE_POST_FAIL })\r\n    }\r\n  }\r\n}\r\n\r\nexport const showModal = () => ({ type: SHOW_MODAL })\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\nimport InputForm from '../../Atoms/Input/Input'\r\nimport Loader from '../../Atoms/Loader/Loader'\r\nimport SubmitForm from '../../Atoms/Input/SubmitForm'\r\nimport Textarea from '../../Atoms/Textarea/Textarea'\r\nimport info from '../../../data/createPost.json'\r\nimport { createPost, updatePost } from '../../../state/actionCreators'\r\nimport './NewPost.scss'\r\n\r\nclass NewPost extends Component {\r\n  handleOnSubmit = e => {\r\n    e.preventDefault()\r\n    const {\r\n      handleOnCreatePost,\r\n      handleOnUpdatePost,\r\n      auth: { token, user },\r\n      update,\r\n      postToUpdate\r\n    } = this.props\r\n    const form = e.target\r\n    const description = form.description.value\r\n    const content = form.content.value\r\n\r\n    const post = {\r\n      description,\r\n      public: true,\r\n      files: {\r\n        'post.md': {\r\n          content\r\n        }\r\n      }\r\n    }\r\n\r\n    if (update) {\r\n      handleOnUpdatePost(postToUpdate.id, post, token)\r\n    } else {\r\n      handleOnCreatePost(post, token, user)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { entityTitle, updateEntityTitle, entityFields } = info\r\n    const { post: { loading }, update, postToUpdate } = this.props\r\n\r\n    return (\r\n      <section className='form-container'>\r\n        <h1 className='headline'>\r\n          {!update ? entityTitle : updateEntityTitle}\r\n        </h1>\r\n        <form className='form' onSubmit={this.handleOnSubmit}>\r\n          {entityFields.map(field => {\r\n            if (field.kind === 'input') {\r\n              return (\r\n                <InputForm\r\n                  type={field.type}\r\n                  name={field.name}\r\n                  id={field.id}\r\n                  placeholder={field.placeholder}\r\n                  key={field.id}\r\n                  required\r\n                  default={postToUpdate && postToUpdate[field.name]}\r\n                />\r\n              )\r\n            }\r\n            if (field.kind === 'textarea') {\r\n              return (\r\n                <Textarea\r\n                  name={field.name}\r\n                  id={field.id}\r\n                  placeholder={field.placeholder}\r\n                  key={field.id}\r\n                  required\r\n                  default={\r\n                    postToUpdate &&\r\n                      postToUpdate.files &&\r\n                      postToUpdate.files['post.md'] &&\r\n                      postToUpdate.files['post.md'].content\r\n                  }\r\n                />\r\n              )\r\n            }\r\n\r\n            return null\r\n          })}\r\n          {loading && <Loader />}\r\n          <ToastContainer\r\n            position='bottom-right'\r\n            autoClose={2500}\r\n            hideProgressBar={false}\r\n            pauseOnVisibilityChange\r\n          />\r\n          <SubmitForm theme='button--secondary' text='Publish' />\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleOnCreatePost (post, token, user) {\r\n    dispatch(createPost(post, token, user))\r\n  },\r\n  handleOnUpdatePost (id, post, token) {\r\n    dispatch(updatePost(id, post, token))\r\n  }\r\n})\r\n\r\nconst mapStateToProps = ({ auth, post }) => ({ auth, post })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost)\r\n","import React from 'react'\r\nimport './Modal.scss'\r\n\r\nconst Modal = ({ show, closeModal, children }) => {\r\n  return (\r\n    <div className={show ? 'modal modal--show' : 'modal'}>\r\n      <div className='modal__content'>\r\n        <span className='modal__close' onClick={closeModal}>\r\n          <span className='icon-close icon' />\r\n          x\r\n        </span>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport TimeAgo from 'react-timeago'\r\nimport { Link } from 'react-router-dom'\r\nimport Markdown from 'react-markdown'\r\nimport Button from '../../Atoms/Button/Button'\r\nimport NewPost from '../NewPost/NewPost'\r\nimport Modal from '../../Organisms/Modal/Modal'\r\nimport './Post.scss'\r\nimport { showModal } from '../../../state/actionCreators'\r\n\r\nconst Post = ({ post, large, auth, ui: { showModal }, handleOnShowModal }) => {\r\n  return (\r\n    <Fragment>\r\n      {post &&\r\n        <li className={large ? 'posts-item posts-item--large' : 'posts-item'}>\r\n          <h6>\r\n            {new Date(post.updated_at).toDateString().slice(4)}\r\n            {' '}\r\n            -\r\n            {' '}\r\n            {<TimeAgo date={post.updated_at} />}\r\n          </h6>\r\n          <div className='posts-item__content'>\r\n            {<p className='posts-item__description'>{post.description}</p>}\r\n            {!large &&\r\n              <div className='posts-item__post'>\r\n                <Link className='posts-item__link' to={`/post/${post.id}`}>\r\n                  Read\r\n                </Link>\r\n              </div>}\r\n          </div>\r\n          {auth.user &&\r\n            post.owner.login === auth.user.login &&\r\n            large &&\r\n            <Button\r\n              onClick={handleOnShowModal}\r\n              theme='button--secondary posts-item--edit'\r\n              text='Edit'\r\n            />}\r\n          {large &&\r\n            <div>\r\n              {Object.values(post.files).map((text, i) => (\r\n                <div key={i} className='posts-item__text'>\r\n                  <Markdown source={text.content} />\r\n                </div>\r\n              ))}\r\n            </div>}\r\n          <Modal show={showModal} closeModal={handleOnShowModal}>\r\n            <NewPost update postToUpdate={post} />\r\n          </Modal>\r\n        </li>}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth, ui }) => ({ auth, ui })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleOnShowModal () {\r\n    dispatch(showModal())\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport InputForm from '../../Atoms/Input/Input'\r\nimport { getData } from '../../../state/actionCreators'\r\nimport './FormSearch.scss'\r\n\r\nconst FormSearch = ({ handleOnSearch }) => {\r\n  return (\r\n    <section className='form-container'>\r\n      <form\r\n        className='form-search'\r\n        onSubmit={e => {\r\n          e.preventDefault()\r\n          handleOnSearch(e.target.username.value)\r\n        }}\r\n      >\r\n        <h1 className='headline'>SEARCH</h1>\r\n        <InputForm\r\n          onChange={e => {\r\n            if (e.target.value === '') {\r\n              handleOnSearch('')\r\n            }\r\n          }}\r\n          name='username'\r\n          placeholder='Username...'\r\n        />\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleOnSearch (username) {\r\n    dispatch(getData(username))\r\n  }\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(FormSearch)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Loader from '../../Atoms/Loader/Loader'\r\nimport Post from '../../Organisms/Post/Post'\r\nimport './Posts.scss'\r\nimport FormSearch from '../../Molecules/FormSearch/FormSearch'\r\n\r\nexport const Posts = ({ posts: { posts, loading, error } }) => {\r\n  return (\r\n    <div>\r\n      <FormSearch posts={!!posts} />\r\n      {posts &&\r\n        posts[0] &&\r\n        <div className='user-info'>\r\n          <img\r\n            className='posts-item__avatar'\r\n            src={posts[0].owner.avatar_url && posts[0].owner.avatar_url}\r\n            alt='avatar url'\r\n          />\r\n          <a\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n            href={posts[0].owner.html_url}\r\n            className='posts-item__author'\r\n          >\r\n            {posts[0].owner.login}\r\n          </a>\r\n        </div>}\r\n      <ul className={posts ? 'posts posts--show' : 'posts'}>\r\n        <h5>POSTS</h5>\r\n        {posts &&\r\n          posts.map(\r\n            post => post.description && <Post key={post.id} post={post} />\r\n          )}\r\n      </ul>\r\n      {loading && <div className='loader'><Loader /></div>}\r\n      {posts && !posts.length && <p>'Not post'</p>}\r\n      {error && <p>{error}</p>}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ posts }) => ({ posts })\r\n\r\nexport default connect(mapStateToProps)(Posts)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Posts from '../Templates/Posts/Posts'\r\nimport NewPost from '../Organisms/NewPost/NewPost'\r\n\r\nconst Blog = ({ posts }) => {\r\n  return (\r\n    <div className='l-container container container--auth'>\r\n      <NewPost />\r\n      <Posts posts={posts} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => ({ auth })\r\n\r\nexport default connect(mapStateToProps)(Blog)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getToken } from '../../state/actionCreators'\r\nimport Posts from '../Templates/Posts/Posts'\r\n\r\nclass Home extends Component {\r\n  componentDidMount () {\r\n    const { getToken } = this.props\r\n    const code = this.props.location.search.replace('?code=', '')\r\n    if (code) {\r\n      getToken(code)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { posts } = this.props\r\n    return (\r\n      <div className='l-container container'>\r\n        <Posts posts={posts} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getToken (code) {\r\n    dispatch(getToken(code))\r\n  }\r\n})\r\n\r\nconst mapStateToProps = ({ auth, posts }) => ({ auth, posts })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Post from '../Organisms/Post/Post'\r\nimport Loader from '../Atoms/Loader/Loader'\r\nimport API from '../../api/api'\r\nimport arrow from '../../assets/right-arrow.svg'\r\n\r\nclass PostDetail extends Component {\r\n  state = {\r\n    post: null,\r\n    loading: null,\r\n    index: null\r\n  }\r\n\r\n  getPost = async params => {\r\n    this.setState({\r\n      loading: true,\r\n      post: null\r\n    })\r\n\r\n    try {\r\n      let { data } = await API.get(`gists/${params.id}`)\r\n      const { posts: { posts } } = this.props\r\n\r\n      this.setState({\r\n        post: data,\r\n        loading: false,\r\n        index: posts.findIndex(s => s.id === data.id) + 1\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    const { match: { params } } = this.props\r\n\r\n    this.getPost(params)\r\n  }\r\n\r\n  componentWillReceiveProps (nextProps) {\r\n    const { match: { params } } = nextProps\r\n\r\n    this.getPost(params)\r\n  }\r\n\r\n  render () {\r\n    const { post, loading } = this.state\r\n    const { posts: { posts } } = this.props\r\n\r\n    return (\r\n      <div className='l-container container'>\r\n        {posts[this.state.index] &&\r\n          <Link className='next' to={`/post/${posts[this.state.index].id}`}>\r\n            <img className='next__img' src={arrow} alt='arrow' />\r\n          </Link>}\r\n        {post && <Post large post={post} />}\r\n        {loading && <div className='posts-item__loader'><Loader /></div>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ posts }) => ({ posts })\r\n\r\nexport default connect(mapStateToProps)(PostDetail)\r\n","import React, { Fragment } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport Error404 from '../Pages/Error404'\r\nimport Blog from '../Pages/Blog'\r\nimport Home from '../Pages/Home'\r\nimport PostDetail from '../Pages/PostDetail'\r\n\r\nconst PrivateRoute = ({ component: Component, authed, rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      (authed === true\r\n        ? <Component {...props} />\r\n        : <Redirect\r\n          to={{ pathname: '/blog/', state: { from: props.location } }}\r\n          />)}\r\n  />\r\n)\r\n\r\nconst PublicRoute = ({ component: Component, authed, rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      (authed === false ? <Component {...props} /> : <Redirect to='/posts/' />)}\r\n  />\r\n)\r\n\r\nconst Routes = ({ authed }) => {\r\n  return (\r\n    <Fragment>\r\n      <Switch>\r\n        <PublicRoute path='/blog/' authed={authed} exact component={Home} />\r\n        <PrivateRoute path='/posts/' authed={authed} exact component={Blog} />\r\n        <Route path='/post/:id' authed={authed} exact component={PostDetail} />\r\n        <Route component={Error404} />\r\n      </Switch>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Button from '../../Atoms/Button/Button'\r\nimport { Link } from 'react-router-dom'\r\nimport './Header.scss'\r\nimport {\r\n  onRedirectAuth,\r\n  onLogout,\r\n  getData\r\n} from '../../../state/actionCreators'\r\n\r\nconst Header = ({\r\n  handleOnRedirect,\r\n  handleOnLogout,\r\n  auth: { loggedIn, user }\r\n}) => (\r\n  <header className='header'>\r\n    <div className='header-container l-container'>\r\n      <Link className='header__link' to={loggedIn ? '/posts/' : '/blog/'}>\r\n        BLOG\r\n      </Link>\r\n      {!loggedIn &&\r\n        <Button text='Sign in' onClick={() => handleOnRedirect()} />}\r\n      {loggedIn &&\r\n        user &&\r\n        <div className='header__profile'>\r\n          <span>{user.login}</span>\r\n          <img className='header__avatar' src={user.avatar_url} alt='' />\r\n          <Button text='Logout' onClick={() => handleOnLogout()} />\r\n        </div>}\r\n    </div>\r\n  </header>\r\n)\r\n\r\nconst mapStateToProps = ({ auth }) => ({ auth })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  handleOnRedirect () {\r\n    dispatch(onRedirectAuth())\r\n  },\r\n  handleOnLogout () {\r\n    dispatch(onLogout())\r\n  },\r\n  handleOnSearch (username) {\r\n    dispatch(getData(username))\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React from 'react'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Routes from './components/Utils/Routes'\r\nimport Header from './components/Molecules/Header/Header'\r\nimport './App.scss'\r\n\r\nconst App = ({ auth: { loggedIn } }) => (\r\n  <Router>\r\n    <div className='App'>\r\n      <Header />\r\n      <Routes authed={loggedIn} />\r\n    </div>\r\n  </Router>\r\n)\r\n\r\nconst mapStateToProps = ({ auth }) => ({ auth })\r\n\r\nexport default connect(mapStateToProps)(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\nimport configureStore from './state/store'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport App from './App.jsx'\r\nimport './index.scss'\r\n\r\nconst { store, persistor } = configureStore()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/right-arrow.00ff0323.svg\";"],"sourceRoot":""}